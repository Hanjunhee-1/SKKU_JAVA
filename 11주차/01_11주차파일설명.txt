이번 강의에서는 Java 에서 GUI 를 사용하는 방법에 대해 배웠다.
매번 Console 창으로만 프로그램을 실행할 수도 없는 것이고 컴퓨터를 어떻게 다루는지 잘 모르는 사람들은
Console 창에서 명령을 내리는 방법을 모른다. 때문에 사용자 친화적으로 프로그램을 실행시켜주어야 하는데
그것을 도와주는 것이 GUI 이다. 

사람에게 보여주는 화면에 대해 구조적으로 생각해볼 필요가 있는데
구조는 다음과 같이 이루어진다.

    (1) JFrame
        Frame 이라는 영어단어에서 알 수 있는 것처럼 사용자에게 보여지는 GUI 창을 의미한다.
        Frame 이 존재해야만 GUI 창을 보여줄 수 있다. 
        JFrame 과 관련해서 기본적으로 알아두면 좋은 함수들이 있다.
        
        a. setTitle(text)
            GUI 창의 이름을 설정해줄 수 있다. 

        b. setSize(width, height)
            GUI 창의 크기를 설정해줄 수 있다. 기준은 pixel 이다.

        c. pack()
            GUI 창의 크기를 설정해줄 수 있다. setSize() 와는 다르게 width, height 값을 줄 필요가 없으며
            Frame 내부에 존재하는 컴포넌트에 맞춰서 크기를 자동으로 설정해준다.

        d. setVisible(true)
            GUI 창이 보여질 수 있게 해준다. 해당 함수를 사용하지 않으면 Frame 을 아무리 잘 만들어 놓는다고 해도
            GUI 창이 절대 안보인다. 

    (2) JPanel
        JPanel 은 JFrame 의 하위 Frame 이라고 생각하면 된다. JPanel 을 사용하지 않고도 Frame 에 바로 컴포넌트를 추가할 수도 있지만
        JPanel 에 먼저 컴포넌트를 추가하고 해당 JPanel 을 JFrame 에 추가하면 그렇지 않았을 때보다 더 보기 좋은 Frame 을 만들 수 있다.
    
    (3) JComponent
        위에서도 계속 컴포넌트를 언급했는데 컴포넌트는 Frame 을 구성하는 어떤 요소들이다. 예를 들면, 로그인 창이 있다고 할 때
        id 를 입력하는 칸, id 를 입력하라고 안내하는 칸, 로그인 버튼 등과 같은 것들이 있다. JTextField, JLabel, JPasswordField, JButton 등과 같은
        컴포넌트들이 존재하니 필요할 때마다 잘 찾아서 써보면 된다.

    

그래서 이번 주차 과제는 로그인 창을 구현하는 것이었다. 
이번 과제를 하면서 못보던 구조를 보았는데 클래스 안에 클래스가 또 있는 구조였다.
굳이 위의 방식처럼 할 필요는 없지만 과제에서 주어진 스켈레톤 코드가 위와 같은 형태였다.

GUI 관련 코드를 작성할 때 아래의 흐름에 맞추어 작성하면 좋을 것 같다.
    
    (1) 컴포넌트, panel 을 먼저 선언해두기
        이렇게 하면 GUI 창 생성자에서 어느 것을 추가했어야 했는지 잃어버릴 일도 없고 좋은 것 같다.

    (2) MyFrame 생성자에서 제목, GUI 창 크기, 닫는 옵션, 레이아웃을 먼저 설정하기

    (3) 컴포넌트를 작성할 때는 컴포넌트가 가져야할 text (라벨의 경우 안내를 위해 text 가 따로 필요함) 를 설정하고
        컴포넌트의 크기를 지정하기

    (4) panel 객체를 생성하고 panel 에 컴포넌트를 추가하기 (추가할 때는 label -> field 순으로 하는 것이 좋다.)

    (5) panel 객체를 Frame 에 추가해주기 (add() 함수를 사용.)