JAVA 의 기본문법을 배웠다.
데이터 타입부터 연산자, I/O 관련 함수 등을 배웠다.


추가적으로 ArrayList 도 배웠는데 해당 부분은 처음 배우는 것이었다.
ArrayList 는 Generic 이라는 개념을 사용하는 list 였다.

    ★  갑자기 Generic 이 생각 안날수도 있으니...
        ArrayList 는 이미 java 에서 제공하는 함수이다. 근데 함수는 선언을 할 때
        타입을 선언해야 한다. 하지만 ArrayList 는 사용자가 어떤 타입을 정하냐에 따라서 
        자유롭게 타입을 지정할 수 있다. 이것이 가능한 이유는 Generic 을 사용했기 때문이다.


ArrayList 의 기본 선언은 다음과 같다.

```
    ArrayList<Type> variable = new ArrayList<Type>();
```
여기서 Generic 임을 알 수 있는 것은 <Type> 부분이다.
그래서 ArrayList 가 무엇이냐면! 

동적배열이다. 기존 정적배열의 문제는 자기가 원하는 만큼 요만큼(?) 정도 넉넉하게 선언해놓고 쓰면 되지만
이렇게 하면 선언해둔 크기보다 적게 쓸 경우도 생기고 해당 크기를 넘어가는 경우도 생기게 된다.
하지만 동적배열을 사용하면 배열에 값이 추가 될때마다 크기가 늘어나기 때문에 이런 일이 생길일이 없다.


    ★  근데 사실 ArrayList 도 내부적으로는 크기가 정해져있다고 한다...
        솔직히 이 부분은 몰랐다. 오늘 교수님께서 말씀해주신 것인데 ArrayList 도 내부적으로는 크기가 정해져있다고 한다.
        물론 그 크기가 굉장히 커서 해당 크기를 넘기는 경우는 없지만 만약 넘기게 된다면 다음과 같이 동작하게 된다고 한다.

        1.  이미 생성되어있는 ArrayList 의 크기와 동일한 크기를 가지는 ArrayList 를 하나 더 생성한다.
        2.  기존에 존재하던 ArrayList 와 새로 생성한 ArrayList 를 link 하여 개발자가 느끼기에는 쭉 이어져있는 것처럼 느껴지게 한다.








★  코드 설명
이번에 제시해주신 과제는 숫자변환기이다. 사용자로부터 10진수를 입력받으면 2진수, 8진수, 16진수로 각각 변환하여 출력해주는 프로그램을
작성하면 된다. '어? 그냥 format 을 쓰면 되지 않을까? (예: %o, %h 등등)' 라는 생각을 했지만 그렇게 하면 안된다고 하셨다. 
즉, 본인만의 생각으로 구하라는 것이었다. 일단 나는 다음과 같이 문제를 풀수있었다.

    1.  10진수를 2진수로 변환할 때의 특징을 알아본다.
        10진수를 2로 나눈 나머지를 따로 저장하고 몫을 또다시 2로 나눈다.
        위의 과정을 계속 반복하다보면 더이상 나눌수없는 지경에 이른다.
        이때 각 과정에서 생겼던 나머지를 거꾸로 올라가면서 쭉 출력해주면 10진수를 2진수로 변환한 결과가 된다.

        말로는 좀 생각이 어려울 수 있어서 식으로 적어보자면
        128 이라는 수가 있다고 가정.

        128 % 2 = 0
        64 % 2 = 0
        32 % 2 = 0
        16 % 2 = 0
        8 % 2 = 0
        4 % 2 = 0
        2 % 2 = 0
        1 % 2 = 1

        이제 이 부분에서 거꿀로 쭉 출력하면 1000 0000 이 되는데 해당 이진수는 128 이다.
    
    2.  나머지 진수들도 똑같지 않을까? 생각해봤는데 똑같았다. 이제 코드만 작성하면 된다. 


```
    // 숫자를 변환해주는 함수
    public static void converter(int userInput, int number, String notice) {
        ArrayList<Integer> list = new ArrayList<Integer>();

        while (userInput > 0) {
            int element = userInput % number;
            if (element >= 10) {
                element += 87;
            }
            list.add(element);
            userInput /= number;
        }

        System.out.print(notice);
        for (int i=list.size()-1; i>=0; i--) {
            int j = list.get(i);
            if (j>=97) {
                System.out.print((char)j);
            } else {
                System.out.print(j);
            }
        }
        System.out.println();
    }
```
일단 ArrayList 를 사용해서 동적배열을 선언해준다.
그리고 사용자의 입력값이 0보다 크면 반복문을 돌려준다. 

반복문 내부에서 사용자의 입력값을 각 진수에 따라 나눈 나머지를 element 라는 변수에 저장한다. 
이제 조건문이 중요한데 해당 조건문은 16진수를 구하기 위한 조건문이다. 
87 을 더한 이유는 나중에 (char) variable 이런식으로 출력하면 해당 숫자의 아스키코드를 출력해줄 수 있기 때문이다. 
해당 element 를 list 에 저장하고 사용자의 입력값을 각 진수에 따라 나눈 후에 몫을 다시 저장한다.

위의 과정이 모두 끝나면 이제 형식에 맞게 출력해준다. 
아까 결과로 나왔던 나머지들을 거꾸로 쭉 출력하면 각 진수에 맞게 변환한 결과라는 것을 알았기 때문에
ArrayList 의 맨 끝부터 처음까지 거꾸로 출력해주면 된다. 
근데 이제 여기서 16진수를 위해 처리해주는 부분이 if 문이다. 
97 이상인 경우는 반복문에서 나머지가 10 이상으로 나왔던 경우일 것이고 해당 정수를 char 형으로 변환하여 출력하면 
16 진수도 출력해줄 수 있다. 

```
    public static void main(String args[]) {
        Scanner scan = new Scanner(System.in);

        int userInput = scan.nextInt();
        scan.close();
        converter(userInput, 2, "b ");
        converter(userInput, 8, "o ");
        converter(userInput, 16, "h ");
    }
```
이렇게 함수로 잘 작성해놓으면 main 에서 할 일이 거의 없다ㅎㅎ


*   처음에 코드를 작성했을 때는 중복되는 곳이 많았는데 함수를 사용해서 코드를 리팩토링하였다.


함수 선언과 관련해서 알게된 것이 있다.
만약에 main() 함수가 존재하는 class 에서 동일한 레벨에 함수를 선언하고 싶다면
선언하려는 함수는 static 이 붙어야 한다. 왜냐하면 static 이 안붙은 경우는 해당 함수가 존재하는 클래스의 객체를 따로 선언하여
객체를 통해 함수에 접근할 때이기 때문이다. 하지만 지금 상황의 경우 main 함수가 존재하는 class 에서 동일한 레벨에 다른 함수를 추가적으로 선언하고 싶은 상황이다.
이럴 때는 동일한 클래스에 존재하기 때문에 클래스의 객체를 통해 접근하는 것이 아닌 함수의 이름만 써도 사용할 수 있게 해야한다.
그럴 때 바로 함수에 static 을 붙여주는 것이다.
(내가 작성한 현재 코드에서는 public 도 붙여주었는데 별 생각없이 붙인것이니 그냥 넘어가길 바란다...)